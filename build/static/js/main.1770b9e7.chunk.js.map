{"version":3,"sources":["components/MovieTemplate.js","components/MovieList.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["MovieTemplate","_ref","children","react_default","a","createElement","className","MovieList","state","movies","_this","props","moviesFromParent","isClicked","clickedImage","componentDidUpdate","setState","$","draggable","axis","css","medium_cover_image","imgOnClick","e","console","log","target","getAttribute","_this$state","this","movieImages","i","length","push","key","data-key","class","style","width","onClick","src","alt","id","Fragment","year","title","genres","join","runtime","rating","likes","summary","React","Component","axios","require","SearchBar","_useState","useState","_useState2","Object","slicedToArray","setMovies","_useState3","_useState4","isSearched","setIsSearched","_useState5","_useState6","isLoading","setIsLoading","getSearchMovie","asyncToGenerator","regenerator_default","mark","_callee","result","tmpMovies","likeObject","wrap","_context","prev","next","get","sent","data","movie","like_count","t0","stop","apply","arguments","onSubmit","preventDefault","placeholder","type","index_esm","role","src_components_MovieList","App","src_components_MovieTemplate","src_components_SearchBar","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1770b9e7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieTemplate.scss';\n\nconst MovieTemplate = ({ children }) => {\n  return (\n    <div className=\"MovieTemplate\">\n      <div className=\"app-title\">yts.mx 영화 정보</div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default MovieTemplate;\n","import React from 'react';\nimport \"./MovieList.scss\";\nimport $ from 'jquery'\nimport 'jquery-ui-dist/jquery-ui';\n\n\nclass MovieList extends React.Component {\n    state = {\n        movies: this.props.moviesFromParent,\n        isClicked: false,\n        clickedImage: 0,\n    }\n\n    componentDidUpdate = () => {\n        if (this.state.movies !== this.props.moviesFromParent) {\n            this.setState({movies: this.props.moviesFromParent});\n            // console.log(this.state.movies);\n        }\n    \n        $(\"#movDescription\").draggable({axis: 'y'});\n        $('#coverImgDiv').css('background-image','url(' + this.state.movies[this.state.clickedImage].medium_cover_image +')');\n    }\n\n    imgOnClick = (e) => {\n        // this.setState({clicked: true, clickedImage})\n        console.log('Clicked!!', e.target.getAttribute('data-key'));\n        this.setState({isClicked: true, clickedImage: e.target.getAttribute('data-key')});\n    }\n\n    render() {\n        const {isClicked, movies, clickedImage} = this.state;\n        const movieImages = [];\n        \n        console.log(this.state.movies);\n        \n        for(let i = 0; i < this.state.movies.length; i++) {\n            movieImages.push(<img key={i} data-key={i} class=\"\" style={{width: (100 / this.state.movies.length) + '%'}} onClick={this.imgOnClick} src={movies[i].medium_cover_image} alt='yts movie snapshot'></img>);\n        }\n        \n        return (\n            <div id='whole-movie-container'>\n                <div id='prevImgs' class=\"row text-center\">\n                        {movieImages}\n                    </div>\n                {isClicked ? (\n                    <>\n                    <div id='desc-container'>\n                        <div id='coverImgDiv'></div>\n                        <div id='movDescription'>\n                            <p id='releasedYear'>{movies[clickedImage].year} 개봉</p>\n                            <div class='row pt-2'>\n                                <h3>{movies[clickedImage].title}</h3>\n                            </div>\n                            <div class='row'>\n                                <p>{movies[clickedImage].genres.join(', ')}</p>\n                            </div>\n                            <div class='row mt-4'>\n                                <h4>영화 정보</h4>\n                            </div>\n                            <div class='row'>\n                                <p class='col-4 p-0'>{movies[clickedImage].runtime}분</p>\n                                <p class='col-4'>평점: {movies[clickedImage].rating}</p>\n                                <p class='col-4 text-right p-0'>좋아요: {movies[clickedImage].likes}</p>\n                            </div>\n                            <div class='row mt-4 mb-4'>\n                                <h4>줄거리</h4>\n                                <p>{movies[clickedImage].summary}</p>\n                            </div>\n                        </div>\n                    </div>\n                    </>\n                )\n                : null}\n                \n            </div>\n        )\n    }\n}\n\nexport default MovieList;","import React, { useState, useCallback } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport MovieList from './MovieList';\nimport { MovieTemplate } from './MovieTemplate';\nimport './SearchBar.scss';\n\n\nlet axios = require('axios');\n\nconst SearchBar = () => {\n  let [movies, setMovies] = useState(null);\n  let [isSearched, setIsSearched] = useState(false);\n  let [isLoading, setIsLoading] = useState(false);\n\n  const getSearchMovie = async () => {\n    const ID_KEY = 'MPF85hV_M_MgoJFe46Ms';\n    const SECRET_KEY = 'uSvgQms2A1';\n  \n    try {\n      console.log('Requested to the server!')\n          let result = await axios.get('http://localhost:4000/movies?sort_by=like_count&order_by=desc&limit=5');\n          let tmpMovies = result.data.data.movies;\n          \n          for (let i = 0; i < result.data.data.movies.length; i++) {\n            let likeObject= await axios.get('http://localhost:4000/likes?movie_id=' + tmpMovies[i].id);  \n            tmpMovies[i].likes = likeObject.data.data.movie.like_count;\n          }\n          \n          // let result = await axios.get('http://localhost:4000/yts');\n          setMovies(result.data.data.movies);\n          console.log(movies);\n          setIsLoading(false);\n          \n    } catch (error) {\n      console.log(error);\n    }\n  }; \n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSearched(true);\n    setIsLoading(true);\n    getSearchMovie();\n  };\n\n  function checkComponents() {\n    if (!isSearched) {\n      return null;\n    }\n\n    if (isLoading) {\n      return (\n        <div>\n          <div class=\"spinner-grow text-primary loader\" role=\"status\"></div>\n        </div>\n      );\n    } else {\n      return (\n        <MovieList moviesFromParent={movies}/>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <form className=\"SearchBar\" onSubmit={onSubmit}>\n        {/* TextField for Searching */}\n        <input placeholder=\"입력포맷: <정렬기준> <검색개수> 예: like 5\"/>\n        \n        {/* + Button */}\n        <button type=\"submit\">\n          <MdAdd />\n        </button>\n      </form>\n      {/* Conditional Rendering */}\n      {checkComponents()}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useRef, useCallback } from 'react';\nimport MovieTemplate from './components/MovieTemplate';\nimport SearchBar from './components/SearchBar';\nimport MovieList from './components/MovieList';\n\nconst App = () => {\n  return (\n    <MovieTemplate>\n      <SearchBar/>\n    </MovieTemplate>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}